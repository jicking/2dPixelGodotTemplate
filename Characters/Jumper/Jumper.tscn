[gd_scene load_steps=7 format=2]

[ext_resource path="res://Characters/Jumper/sprite00_16x16_0000.png" type="Texture" id=1]
[ext_resource path="res://Characters/Jumper/sprite00_16x16_0001.png" type="Texture" id=2]

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody2D
signal npc_collided

var gravity = 200.0
var walk_Speed = 140
var velocity = Vector2()
var isDisabled = false

func _physics_process(delta):
	if isDisabled :
		return
	
	velocity.y += delta * gravity
	
	if Input.is_action_pressed(\"ui_left\"):
	    velocity.x = -walk_Speed
	elif Input.is_action_pressed(\"ui_right\"):
	    velocity.x =  walk_Speed
	else:
	    velocity.x = 0
	
	# We don't need to multiply velocity by delta because \"move_and_slide\" already takes delta time into account.
	
	# The second parameter of \"move_and_slide\" is the normal pointing up.
	# In the case of a 2D platformer, in Godot, upward is negative y, which translates to -1 as a normal.
	move_and_slide(velocity, Vector2(0, -1))

func _on_NpcSensorArea2D_body_entered(body):
	if body.is_in_group(\"npc\"):
		emit_signal(\"npc_collided\",body.name)
		print_debug(\"SIGNAL npc_collided name: \" + body.name)

func disable():
	isDisabled = true

func enable():
	isDisabled = false"

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 1 ), ExtResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CapsuleShape2D" id=2]
radius = 6.14224
height = 2.25533

[sub_resource type="CircleShape2D" id=4]
radius = 8.54558

[node name="Jumper" type="KinematicBody2D"]
script = SubResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = SubResource( 1 )
frame = 1
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0.0769501, 0.538612 )
shape = SubResource( 2 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
smoothing_enabled = true

[node name="NpcSensorArea2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="NpcSensorArea2D"]
shape = SubResource( 4 )
[connection signal="body_entered" from="NpcSensorArea2D" to="." method="_on_NpcSensorArea2D_body_entered"]
